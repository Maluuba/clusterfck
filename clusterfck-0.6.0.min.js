(function(e){if(typeof exports=="object"&&typeof module!="undefined")module.exports=e();else if(typeof define=="function"&&define.amd)define([],e);else{var t;typeof window!="undefined"?t=window:typeof global!="undefined"?t=global:typeof self!="undefined"?t=self:t=this,t.clusterfck=e()}})(function(){var e,t,n;return function r(e,t,n){function i(o,u){if(!t[o]){if(!e[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(s)return s(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=t[o]={exports:{}};e[o][0].call(l.exports,function(t){var n=e[o][1][t];return i(n?n:t)},l,l.exports,r,e,t,n)}return t[o].exports}var s=typeof require=="function"&&require;for(var o=0;o<n.length;o++)i(n[o]);return i}({1:[function(e,t,n){t.exports={hcluster:e("./hcluster"),Kmeans:e("./kmeans"),kmeans:e("./kmeans").kmeans}},{"./hcluster":3,"./kmeans":4}],2:[function(e,t,n){t.exports={euclidean:function(e,t){var n=0;for(var r=0;r<e.length;r++)n+=Math.pow(t[r]-e[r],2);return Math.sqrt(n)},manhattan:function(e,t){var n=0;for(var r=0;r<e.length;r++)n+=Math.abs(t[r]-e[r]);return n},max:function(e,t){var n=0;for(var r=0;r<e.length;r++)n=Math.max(n,Math.abs(t[r]-e[r]));return n}}},{}],3:[function(e,t,n){var r=e("./distance"),i=function(e,t,n){this.distance=e,this.linkage=t,this.threshold=n==undefined?Infinity:n};i.prototype={cluster:function(e,t,n){this.clusters=[],this.dists=[],this.mins=[],this.index=[];for(var r=0;r<e.length;r++){var i={value:e[r],key:r,index:r,size:1};this.clusters[r]=i,this.index[r]=i,this.dists[r]=[],this.mins[r]=0}for(var r=0;r<this.clusters.length;r++)for(var s=0;s<=r;s++){var o=r==s?Infinity:this.distance(this.clusters[r].value,this.clusters[s].value);this.dists[r][s]=o,this.dists[s][r]=o,o<this.dists[r][this.mins[r]]&&(this.mins[r]=s)}var u=this.mergeClosest(),r=0;while(u)n&&r++%t==0&&n(this.clusters),u=this.mergeClosest();return this.clusters.forEach(function(e){delete e.key,delete e.index}),this.clusters},mergeClosest:function(){var e=0,t=Infinity;for(var n=0;n<this.clusters.length;n++){var r=this.clusters[n].key,i=this.dists[r][this.mins[r]];i<t&&(e=r,t=i)}if(t>=this.threshold)return!1;var s=this.index[e],o=this.index[this.mins[e]],u={left:s,right:o,key:s.key,size:s.size+o.size};this.clusters[s.index]=u,this.clusters.splice(o.index,1),this.index[s.key]=u;for(var n=0;n<this.clusters.length;n++){var a=this.clusters[n],i;s.key==a.key?i=Infinity:this.linkage=="single"?(i=this.dists[s.key][a.key],this.dists[s.key][a.key]>this.dists[o.key][a.key]&&(i=this.dists[o.key][a.key])):this.linkage=="complete"?(i=this.dists[s.key][a.key],this.dists[s.key][a.key]<this.dists[o.key][a.key]&&(i=this.dists[o.key][a.key])):this.linkage=="average"?i=(this.dists[s.key][a.key]*s.size+this.dists[o.key][a.key]*o.size)/(s.size+o.size):i=this.distance(a.value,s.value),this.dists[s.key][a.key]=this.dists[a.key][s.key]=i}for(var n=0;n<this.clusters.length;n++){var f=this.clusters[n].key;if(this.mins[f]==s.key||this.mins[f]==o.key){var t=f;for(var l=0;l<this.clusters.length;l++){var c=this.clusters[l].key;this.dists[f][c]<this.dists[f][t]&&(t=c)}this.mins[f]=t}this.clusters[n].index=n}return delete s.key,delete o.key,delete s.index,delete o.index,!0}};var s=function(e,t,n,s,o,u){t=t||"euclidean",n=n||"average",typeof t=="string"&&(t=r[t]);var a=(new i(t,n,s)).cluster(e,o,u);return s===undefined?a[0]:a};t.exports=s},{"./distance":2}],4:[function(e,t,n){function i(e){this.centroids=e||[]}var r=e("./distance");i.prototype.randomCentroids=function(e,t){var n=e.slice(0);return n.sort(function(){return Math.round(Math.random())-.5}),n.slice(0,t)},i.prototype.classify=function(e,t){var n=Infinity,i=0;t=t||"euclidean",typeof t=="string"&&(t=r[t]);for(var s=0;s<this.centroids.length;s++){var o=t(e,this.centroids[s]);o<n&&(n=o,i=s)}return i},i.prototype.cluster=function(e,t,n,i,s){t=t||Math.max(2,Math.ceil(Math.sqrt(e.length/2))),n=n||"euclidean",typeof n=="string"&&(n=r[n]),this.centroids=this.randomCentroids(e,t);var o=new Array(e.length),u=new Array(t),a=0,f=!0;while(f){for(var l=0;l<e.length;l++)o[l]=this.classify(e[l],n);f=!1;for(var c=0;c<t;c++){var h=[];for(var l=0;l<o.length;l++)o[l]==c&&h.push(e[l]);if(!h.length)continue;var p=this.centroids[c],d=new Array(p.length);for(var v=0;v<p.length;v++){var m=0;for(var l=0;l<h.length;l++)m+=h[l][v];d[v]=m/h.length,d[v]!=p[v]&&(f=!0)}this.centroids[c]=d,u[c]=h}s&&a++%i==0&&s(u)}return u},i.prototype.toJSON=function(){return JSON.stringify(this.centroids)},i.prototype.fromJSON=function(e){return this.centroids=JSON.parse(e),this},t.exports=i,t.exports.kmeans=function(e,t){return(new i).cluster(e,t)}},{"./distance":2}]},{},[1])(1)})